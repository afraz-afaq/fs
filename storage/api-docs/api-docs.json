{
    "openapi": "3.0.0",
    "info": {
        "title": "L5 OpenApi",
        "description": "FS Project",
        "contact": {
            "email": "afrazafaq96@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api",
            "description": "L5 Swagger OpenApi dynamic host server"
        },
        {
            "url": "https://projects.dev/api/v1",
            "description": "L5 Swagger OpenApi Server"
        }
    ],
    "paths": {
        "/list/{id}": {
            "get": {
                "tags": [
                    "Filter Tables"
                ],
                "summary": "Returns the db table",
                "description": "COUNTRY = 1, GOVERNER = 2, CITY = 3, MRDEBT = 4, MRTYPE = 5, MERCHANT = 6, PRODUCT = 7, PCLASS = 8, MANUFACTURER = 9, BOXNAME = 10, SCIENTIFICN = 11",
                "operationId": "getList",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Table content list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "{'data' : [{'id': 1, 'country': 'AB'}, {'id': 2, 'country': 'CD'}], 'message':'List retrieved'}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No such table exists"
                    }
                }
            }
        },
        "/invoice": {
            "get": {
                "tags": [
                    "Invoice Table List"
                ],
                "summary": "Returns the invoices",
                "description": "Return the list of Invoices.",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "ie",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "customer_name",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_type",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All Invoices",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "{'data' : [Invoice Object, Invoice Object], 'message':'All Invoices'}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/invoice/view": {
            "get": {
                "tags": [
                    "Invoice View"
                ],
                "summary": "Returns the invoice",
                "description": "Returns the invoice.",
                "operationId": "view",
                "parameters": [
                    {
                        "name": "ie",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "isDelete",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "itemno",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "{'data' : {invoice Object}, 'message':'Invoice retrieved'}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No such record exists"
                    }
                }
            }
        },
        "/invoice/product-delete": {
            "get": {
                "tags": [
                    "Invoice Product Delete"
                ],
                "summary": "Deletes the invoice product",
                "description": "Deletes the invoice product",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice Product Deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "{'data' : {flag}, 'message':'Invoice Product Deleted.'}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No such record exists"
                    }
                }
            }
        },
        "/invoice/update": {
            "post": {
                "tags": [
                    "Invoice update"
                ],
                "summary": "Invoice update",
                "description": "Invoice update",
                "operationId": "updateProduct",
                "requestBody": {
                    "description": "update invoice object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "validation fails"
                    },
                    "200": {
                        "description": "Invoice Updated."
                    }
                }
            }
        },
        "/invoice/get-itemno": {
            "get": {
                "tags": [
                    "Invoice Get Item No"
                ],
                "summary": "Returns the itemno",
                "description": "Return the last itemno to make new invoice.",
                "operationId": "getInvoiceNumber",
                "parameters": [
                    {
                        "name": "ie",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item No.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "{'data' : [itemno : 12], 'message':'Item No.'}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/invoice/save": {
            "post": {
                "tags": [
                    "Invoice Save"
                ],
                "summary": "Invoice Save",
                "description": "Invoice Save",
                "operationId": "saveInvoice",
                "requestBody": {
                    "description": "save invoice object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceSave"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "validation fails"
                    },
                    "200": {
                        "description": "Invoice Saved."
                    }
                }
            }
        },
        "/invoice/save-product": {
            "post": {
                "tags": [
                    "Invoice Product Save"
                ],
                "summary": "Invoice Product Save",
                "description": "Invoice Product Save",
                "operationId": "saveInvoiceProduct",
                "requestBody": {
                    "description": "save invoice Product object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceProductSave"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "validation fails"
                    },
                    "200": {
                        "description": "Invoice Product Saved."
                    }
                }
            }
        },
        "/mrdebt": {
            "get": {
                "tags": [
                    "Mrdebt Table Customers Account List"
                ],
                "summary": "Returns the mrdebt customer accounts list",
                "description": "Return the list of customers from mrdebt table.",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All Mrdebt Customers Accounts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "{'data' : [Mrdebt Object, Mrdebt Object], 'message':'All Mrdebt Customers Accounts'}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/mrtype": {
            "get": {
                "tags": [
                    "Mrtype Table List"
                ],
                "summary": "Returns the types of mrdebt list",
                "description": "Return the list of mrdebt types from mrtype table.",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "All Mrtypes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "{'data' : [Mrtype Object, Mrtype Object], 'message':'All Mrtypes'}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notification": {
            "get": {
                "tags": [
                    "Notification Table List"
                ],
                "summary": "Returns the notifications",
                "description": "Return the list of notifications.",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "All Notifications",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "{'data' : [Notification Object, Notification Object], 'message':'All Notifications'}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/product": {
            "get": {
                "tags": [
                    "Product Table List"
                ],
                "summary": "Returns the products",
                "description": "Return the list of products from product table.",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "pclass",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pname",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "manufacturer",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All Products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "{'data' : [Whouse Object, Whouse Object], 'message':'All Warehouse Products'}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/product/save": {
            "post": {
                "tags": [
                    "Product save"
                ],
                "summary": "Create product",
                "description": "User can create product through this api",
                "operationId": "save",
                "requestBody": {
                    "description": "save product object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaveProduct"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "validation fails"
                    },
                    "200": {
                        "description": "Product Saved Successfully."
                    }
                }
            }
        },
        "/product/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Returns the product through barcode",
                "description": "Takes barcode in the query path and returns the relevant product.",
                "operationId": "view",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Table content list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "{'data' : {product Object}, 'message':'Product retrieved'}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No such record exists"
                    }
                }
            }
        },
        "/product/{id}/status/{status}": {
            "get": {
                "tags": [
                    "Product Status Change"
                ],
                "summary": "Changes the status of product through barcode",
                "description": "Takes barcode in the query path and Changes the status of product.",
                "operationId": "view",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Table content list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "{'data' : {product Object}, 'message':'Product Status Changed Successfully.'}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No such record exists"
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "tags": [
                    "User Login"
                ],
                "summary": "Create user",
                "description": "User can login through this api",
                "operationId": "login",
                "requestBody": {
                    "description": "Login user object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogin"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "logined user object"
                    },
                    "400": {
                        "description": "Username or password missing"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/user/signup": {
            "post": {
                "tags": [
                    "User Signup"
                ],
                "summary": "Create user",
                "description": "User can signup through this api",
                "operationId": "signup",
                "requestBody": {
                    "description": "Signup user object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSignup"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "validation fails"
                    },
                    "200": {
                        "description": "signup user object"
                    }
                }
            }
        },
        "/user/save-token": {
            "get": {
                "tags": [
                    "User Save Token"
                ],
                "summary": "Save user token",
                "description": "Saves user firebase token",
                "operationId": "savedeviceToken",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All Invoices",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "{'data' : [flag : 1], 'message':'Token Saved'}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/voucher": {
            "get": {
                "tags": [
                    "Voucher List"
                ],
                "summary": "Returns the voucher list",
                "description": "Return the list of vouchers.\n     *       Order by Fields: mrname => Customer, date1 => date, itemno => Item no, amount => arrivel",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "mrname",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date1",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All Vouchers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "{'data' : [Voucher Object, Voucher Object], 'message':'All Vouchers'}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/whouse": {
            "get": {
                "tags": [
                    "Whouse Table Product List"
                ],
                "summary": "Returns the whouse products.",
                "description": "Return the list of products from whouse table. Order By: 'pbarcode', 'pname', 'pclass', 'cwhouse', 'saleprice','manufacturer','scientificn'",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "pclass",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pname",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "manufacturer",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "scientificn",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All Warehouse Products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "{'data' : [Product Object, Product Object], 'message':'All Products'}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/whouse/{id}": {
            "get": {
                "tags": [
                    "whouse"
                ],
                "summary": "Returns the whouse product through barcode",
                "description": "Takes barcode in the query path and returns the relevant whouse product.",
                "operationId": "view",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Table content list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "{'data' : {whouse Object}, 'message':'Warehouse Product retrieved'}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No such record exists"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "InvoiceUpdate": {
                "title": "Invoice Update model",
                "description": "Model for Updating Invoice",
                "properties": {
                    "ie": {
                        "description": "ie",
                        "type": "String",
                        "example": "sale"
                    },
                    "mrname": {
                        "description": "Customer name",
                        "type": "String",
                        "example": "Foo"
                    },
                    "arrivel": {
                        "description": "Arrivel",
                        "type": "String",
                        "example": "qwqw"
                    },
                    "itemno": {
                        "description": "item no",
                        "type": "string",
                        "example": "121"
                    },
                    "date": {
                        "description": "date of invoice",
                        "type": "string",
                        "example": "2020-09-09"
                    },
                    "discount": {
                        "description": "Discount",
                        "type": "string",
                        "example": "1"
                    },
                    "comment": {
                        "description": "Comment",
                        "type": "string",
                        "example": "YOYO"
                    }
                },
                "type": "object"
            },
            "InvoiceSave": {
                "title": "Invoice Save model",
                "description": "Model for saving Invoice",
                "properties": {
                    "ie": {
                        "description": "ie",
                        "type": "String",
                        "example": "sale"
                    },
                    "ie2": {
                        "description": "ie2",
                        "type": "String",
                        "example": "sale"
                    },
                    "mrname": {
                        "description": "Customer name",
                        "type": "String",
                        "example": "Foo"
                    },
                    "username": {
                        "description": "Arrivel",
                        "type": "String",
                        "example": "qwqw"
                    },
                    "itemno": {
                        "description": "item no",
                        "type": "string",
                        "example": "121"
                    },
                    "date": {
                        "description": "date of invoice",
                        "type": "string",
                        "example": "2020-09-09"
                    }
                },
                "type": "object"
            },
            "InvoiceProductSave": {
                "title": "Invoice Product Save model",
                "description": "Model for saving Product Invoice",
                "properties": {
                    "ie": {
                        "description": "ie",
                        "type": "String",
                        "example": "sale"
                    },
                    "pname": {
                        "description": "pname",
                        "type": "String",
                        "example": "Flower"
                    },
                    "mrname": {
                        "description": "Customer name",
                        "type": "String",
                        "example": "Foo"
                    },
                    "username": {
                        "description": "Arrivel",
                        "type": "String",
                        "example": "qwqw"
                    },
                    "itemno": {
                        "description": "item no",
                        "type": "string",
                        "example": "121"
                    },
                    "date": {
                        "description": "date of invoice",
                        "type": "string",
                        "example": "2020-09-09"
                    },
                    "pprice": {
                        "description": "pprice",
                        "type": "string",
                        "example": "20"
                    },
                    "bonis": {
                        "description": "bonis",
                        "type": "string",
                        "example": "2"
                    },
                    "carton": {
                        "description": "carton",
                        "type": "string",
                        "example": "2"
                    }
                },
                "type": "object"
            },
            "SaveProduct": {
                "title": "Save Product model",
                "description": "Model for handeling product save through API",
                "properties": {
                    "pname": {
                        "description": "products name",
                        "type": "String",
                        "example": "Cocomo"
                    },
                    "pclass": {
                        "description": "products class",
                        "type": "String",
                        "example": "abc"
                    },
                    "pbarcode": {
                        "description": "products barcode",
                        "type": "String",
                        "example": "2342343242"
                    },
                    "saleprice": {
                        "description": "products sale price",
                        "type": "string",
                        "example": "121"
                    },
                    "buyprice": {
                        "description": "products buy price",
                        "type": "string",
                        "example": "100"
                    },
                    "active": {
                        "description": "is product active",
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "UserLogin": {
                "title": "User login model",
                "description": "Model for handeling user login through API",
                "properties": {
                    "username": {
                        "description": "Account username of the user",
                        "type": "String",
                        "example": "Farhad SINDI"
                    },
                    "password": {
                        "description": "Account password of the user",
                        "type": "String",
                        "example": "123"
                    }
                },
                "type": "object"
            },
            "UserSignup": {
                "title": "User signup model",
                "description": "Model for handeling user signup through API",
                "properties": {
                    "username": {
                        "description": "Account username of the user",
                        "type": "String",
                        "example": "Farhad SINDI"
                    },
                    "password": {
                        "description": "Account password of the user",
                        "type": "String",
                        "example": "123"
                    },
                    "fullname": {
                        "description": "Account fullname of the user",
                        "type": "String",
                        "example": "abc xyz"
                    },
                    "governer": {
                        "description": "Chosen governer",
                        "type": "string",
                        "example": "abc"
                    },
                    "company_name": {
                        "description": "Chosen company",
                        "type": "string",
                        "example": "abc"
                    },
                    "city": {
                        "description": "Chosen city",
                        "type": "string",
                        "example": "xyz"
                    },
                    "address": {
                        "description": "Account address of the user",
                        "type": "String",
                        "example": "abc 12 xyz"
                    },
                    "mobile": {
                        "description": "Account mobile of the user",
                        "type": "String",
                        "example": "0987654322"
                    }
                },
                "type": "object"
            }
        }
    },
    "security": [
        []
    ]
}